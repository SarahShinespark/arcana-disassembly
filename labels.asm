   Input_0021 = $000021; !^ Stored in 0025 ^!
   Input_0023 = $000023; !^ Stored in 0027 ^!
   Input_0025 = $000025
   Input_0027 = $000027
   Input_0029_New = $000029; !^ Stored in 002D ^!
   Input_002B = $00002B; !^ Stored in 002F ^!
   Input_002D = $00002D
   Input_002F = $00002F
   Input_0031 = $000031; !^ Stored in 0035 ($83DB Advance_polling) ^!
   Input_0033 = $000033; !^ Stored in 0037 ^!
   Input_0035 = $000035
   Input_0037 = $000037
   Screen_display_temp = $000041
   Screen_lighting_temp = $000042; !^ 0 is pitch black, F is full light ^!
   OAM_Size_temp = $000043; !^ Temp var for $2101 ^!
   BGmode_temp = $000044; !^ Stored in $2105 BGmode_Charsize ^!
   NMI_temp = $000047
   Spirit_HP_BCD_lo = $000624
   Spirit_HP_BCD_hi = $000626
   APU_temp = $00062A; !^ Holds a value associated with $2141 APU1 ^!
   Temp_party_order = $00062D
   Event_ID_1st_Offset_In_Use = $000641; !^ FFFF if none in use, 0  ^!
   Event_ID_Slot_00 = $000643; !^ (2b) Enemy ID + #18, FFFF when killed ^!
   Event_ID_Slot_01 = $000645
   Event_ID_Slot_02 = $000647
   Event_ID_Slot_03 = $000649
   Event_ID_Slot_04 = $00064B
   Event_ID_Slot_05 = $00064D
   Event_ID_Slot_06 = $00064F
   Event_ID_Slot_07 = $000651
   Event_ID_Slot_08 = $000653
   Event_ID_Slot_09 = $000655
   Event_ID_Slot_0A_Enemy1 = $000657
   Event_ID_Slot_0B_Enemy2 = $000659
   Event_ID_Slot_0C_Enemy3 = $00065B
   Event_ID_Slot_0D_Enemy4 = $00065D
   Event_ID_Slot_0E_Enemy5 = $00065F
   Event_ID_Slot_0F_Enemy6 = $000661
   Event_ID_Slot_10_Enemy7 = $000663
   Event_ID_Slot_11_Enemy8 = $000665
   Object_Script_Index = $0006D3
   Object_XPOS = $0006F7; !^ Usually 6F9; set by opcode 38 ^!
   Object_XPOS_01 = $0006F9
   Object_YPOS = $00071B; !^ usually 71D; set by opcode 40 ^!
   Object_YPOS_01 = $00071D
   Object_ZPOS = $00073F
   Object_XPOS_mirror = $000787
   Object_XPOS_mirror_01 = $000789
   Object_YPOS_mirror = $0007AB
   Object_ZPOS_mirror = $0007CF
   Object_XPOS_fractional = $0007F3
   Object_YPOS_fractional = $000817
   Object_ZPOS_fractional = $00083B
   Object_XVEL = $00085F
   Object_YVEL = $000883
   Object_ZVEL = $0008A7
   Object_XVEL_fractional = $0008CB
   Object_YVEL_fractional = $0008EF
   Object_ZVEL_fractional = $000913
   Object_XPOS_Sum = $000937
   Object_YPOS_Sum = $00095B
   Object_ZPOS_Sum = $00097F
   Object_var0_Menu_Cursor = $0009A3
   Object_var1_Category = $0009C7; !^ (0-4) Treasure chest item category ^!
   Object_var2_Selection = $0009EB; !^ Current character ID, treasure chest value ^!
   Object_var3_Target = $000A0F
   Object_OnTick_ptr = $000A33; !^ Offset X ^!
   Object_OnTick_bank = $000A57; !^ (Paired with A33,x) ^!
   Object_Anim_Frame = $000A7B
   Command_Rooks = $000A87; !^ 1=main, 3=item/magic, 4=card, 5=weap, 8=atk ^!
   Command_Spirit = $000A89
   Command_Guest1 = $000A8B
   Command_Guest2 = $000A8D
   Object_Spritemap_Ptr = $000A9F
   Object_Spritemap_Bank = $000AC3
   Object_SCR_Next = $000AE7
   Object_SCR_Stack_Ptr = $000B43
   Object_SCR_Wait_Timer = $000B9F; !^ Value 0-7 ^!
   Object_SCR_Program_Cntr = $000BFB
   Object_SCR_Program_Bank = $000C57
   Object_Accumulator = $000CB3
   Object_XPOS_unk1 = $000FEF
   TownCompass = $000FF1; !^ 0200 ($00 02) is south ^!
   Object_YPOS_unk1 = $000FF7
   Object_XPOS_unk2 = $000FFF
   Object_YPOS_unk2 = $001007
   AnimC0_Total = $00102F
   AnimC8_Total = $001037
   Selection_offset = $00103F
   Fn_results = $001041
   Prev_Script_Slot = $001047
   Event_CodePtr = $001049; !^ Stores subroutine pointers ^!
   Event_CodeBank = $00104B; !^ The bank for 1049 ^!
   Ptr_Animation_Loop1 = $00104D
   Ptr_Animation_Loop2 = $00104F
   Cursor_Arr_Xpos_temp = $001051
   Cursor_Arr_Ypos_temp = $001053
   OAM_Xfer_temp = $001055; !^ I think? ^!
   Main_screen_temp = $001057
   Subscreen_temp = $001058; !^ Used for bit operations ^!
   Scn_Pixelation_temp = $001059
   HDMA_ch_temp = $00105A
   Unused_105B = $00105B
   Unused_105D = $00105D
   Unused_105F = $00105F
   Color_Add_temp = $001061
   Color_Math_temp = $001062
   APC_temp = $001063; !^ Used for bit operations ^!
   Current_Music = $001064; !^ Value 33-5A ^!
   Current_SFX = $001066; !^ Value 01-32 ^!
   Graphics_1068 = $001068
   Graphics_106A = $00106A
   Graphics_106C = $00106C
   Unused_106E = $00106E
   Unused_1070 = $001070
   Unused_1072 = $001072
   Unused_1074 = $001074
   Unused_1076 = $001076
   Unused_1078 = $001078
   Unused_107A = $00107A
   Unused_107C = $00107C
   Unused_107E = $00107E
   Unused_1080 = $001080
   Unused_1084 = $001082
   Unused_1086 = $001086
   Unused_1088 = $001088
   Unused_108A = $00108A
   RGB_Red = $00108C
   RGB_Green = $00108D
   RGB_Blue = $00108E
   Portrait_offset = $00108F; !^ Used with opcode 1B ^!
   Animation_Finish_Timer = $001091
   Unused_1093 = $001093
   Pause_status = $001095; !^ Used with opcode 7F (1=paused) ^!
   Text_Line_Speed = $001097; !^ Default A (10 frames for line-by-line) ^!
   Text_Speed = $001099; !^ Default 1 ^!
   Array_Text1_Index0 = $00109B; !^ Stores a $04 (x offset for $28b text vars) ^!
   Array_Text1_Index1 = $00109D
   Array_Text1_Index2 = $00109F
   Array_Text1_Index3 = $0010A1
   Array_Text1_Index4 = $0010A3
   Array_Text2_Index0 = $0010C3
   Array_Text2_Index1 = $0010C5
   Array_Text2_Index2 = $0010C7
   Array_Text2_Index3 = $0010C9
   ASCII_vals = $0010EB; !^ Used for displaying numbers ^!
   Attacker = $001121
   Target = $001123
   Spell_ID = $001127; !^ The spell an enemy is casting ^!
   Spell_Result_array = $00112B; !^ 01=Confused, Slept, Para, Petri, Silence ^!
   Tbl_Offset = $0011B5; !^ Used to track position in intro crawl ^!
   Page_Num = $0011B9; !^ Temp: Tracks page # in item list ^!
   Game_State = $0011C1; !^ 00=Not fighting, can move. 02=Battle poses ^!
   Condition = $0011C3; !^ (2b) Odd: Condition / Even: 01=party member ^!
   Condition_Spirit = $0011C5
   Condition_Guest1 = $0011C7
   Condition_Guest2 = $0011C9
   Condition_Enemy1 = $0011CB
   Condition_Enemy8 = $0011D9
   Condition_copy = $0011DB; !^ Seems to copy $11C3 ^!
   Party_order = $0011F3; !^ 0 1 2 3 default (Ro Sp G1 G2) ^!
   Enemy_order = $0011FB; !^ Order that spells hit the party ^!
   Affinity = $00120B; !^ (2b) Race / Attribute ^!
   Enemy_Affinity = $001213; !^ (2b) Race then element ^!
   Strength = $001223; !^ (2b) Rooks, Spirit, Guest 1-2, Enemy 1-8 ^!
   Enemy_STR = $00122B
   Intelligence = $00123B
   Enemy_INT = $001243
   Endurance = $001253
   Enemy_ENDR = $00125B
   Alertness = $00126B
   Enemy_ALRT = $001273
   EqWeapon = $001283; !^ (2b) Item ID / Character ID ^!
   Enemy_Weapon = $00128B
   EqArmor = $00129B
   Enemy_Armor = $0012A3
   EqAmulet = $0012B3
   Enemy_Amulet = $0012BB
   EqRing = $0012CB
   Enemy_Ring = $0012D3
   ACC_mods = $0012E3; !^ (2b) Buffs/Debuffs for Acc, Evade, Atk, Def ^!
   ACC_mods_enemy = $0012E5
   EVA_mods = $0012E7
   EVA_mods_enemy = $0012E9
   ATK_mods = $0012EB
   ATK_mods_enemy = $0012ED
   DEF_mods = $0012EF
   DEF_mods_enemy = $0012F1
   Curr_HP_Rooks = $0012F3; !^ (2b) Rooks, Spirit, Guest 1-2, Enemies 1-8 ^!
   Curr_HP_Spirit = $0012F5
   Curr_HP_copy = $00130B
   Curr_MP_Rooks = $001323
   Curr_MP_Spirit = $001325
   Curr_MP_Guest1 = $001327
   Curr_MP_Guest2 = $001329
   Curr_MP_Enemy1 = $00132B
   Curr_MP_Enemy2 = $00132D
   Curr_MP_Enemy3 = $00132F
   Curr_MP_Enemy4 = $001331
   Curr_MP_Enemy5 = $001333
   Curr_MP_Enemy6 = $001335
   Curr_MP_Enemy7 = $001337
   Curr_MP_Enemy8 = $001339
   Curr_MP_Rooks_copy = $00133B
   Curr_MP_Spirit_copy = $00133D
   Curr_MP_Guest1_copy = $00133F
   Curr_MP_Guest2_copy = $001341
   Curr_MP_Enemy1_copy = $001343; !^ Unused ^!
   Curr_MP_Enemy2_copy = $001345
   Curr_MP_Enemy3_copy = $001347
   Curr_MP_Enemy4_copy = $001349
   Curr_MP_Enemy5_copy = $00134B
   Curr_MP_Enemy6_copy = $00134D
   Curr_MP_Enemy7_copy = $00134F
   Curr_MP_Enemy8_copy = $001351
   Curr_HP_Sylph = $001353
   Curr_HP_Dao = $001355
   Curr_HP_Marid = $001357
   Curr_HP_Efrite = $001359
   Curr_MP_Sylph = $00135B
   Curr_MP_Dao = $00135D
   Curr_MP_Marid = $00135F
   Curr_MP_Efrite = $001361
   Curr_EXP_Rooks = $001363
   Curr_EXP_Guest1 = $001367
   Curr_EXP_Guest2 = $001369
   Curr_EXP_Enemy1 = $00136B; !^ EXP for beating this enemy ^!
   Curr_EXP_Enemy2 = $00136D
   Curr_EXP_Enemy3 = $00136F
   Curr_EXP_Enemy4 = $001371
   Curr_EXP_Enemy5 = $001373
   Curr_EXP_Enemy6 = $001375
   Curr_EXP_Enemy7 = $001377
   Curr_EXP_Enemy8 = $001379
   Curr_LV_Rooks = $00137B; !^ (2b) Rooks, Spirit, Guest1, Guest2 ^!
   Curr_LV_Spirit = $00137D
   Curr_LV_Guest1 = $00137F
   Curr_LV_Guest2 = $001381
   Curr_LV_Enemy1 = $001383; !^ Affects run chance ^!
   Curr_LV_Enemy2 = $001385
   Curr_LV_Enemy3 = $001387
   Curr_LV_Enemy4 = $001389
   Curr_LV_Enemy5 = $00138B
   Curr_LV_Enemy6 = $00138D
   Curr_LV_Enemy7 = $00138F
   Curr_LV_Enemy8 = $001391
   Max_HP_Rooks = $001393; !^ (2b) Rooks, Spirit, Guest1, Guest2 ^!
   Max_HP_Spirit = $001395
   Max_HP_Guest1 = $001397
   Max_HP_Guest2 = $001399
   Max_MP_Rooks = $00139B
   Max_MP_Spirit = $00139D
   Max_MP_Guest1 = $00139F
   Max_MP_Guest2 = $0013A1
   Temp_EXP = $0013A3; !^ Stores the sum earned in the current battle ^!
   Temp_GP = $0013A5
   Spirits_NotOwned = $0013A7; !^ xxxxEMDS (0=owned for Efrite, Marid, Dao, Sylph) ^!
   Inventory_Cards = $0013A9; !^ (2b each, item ID / quantity, 8 entries) ^!
   Inventory_Items = $0013B9; !^ (2b each, 48 entries) ^!
   Inventory_Eqp = $001419; !^ (2b each, item ID / user ID) ^!
   Spell_list = $001459; !^ (2b, 32 total)(Rooks, Spirit, Guest1, Guest2) ^!
   Curr_GP = $001559; !^ (2b) ^!
   Party_slot1 = $00155B; !^ 0000=Rooks, 1-4=Spirits, 5-8 Guests, 9 None ^!
   Party_slot2 = $00155D
   Party_slot3 = $00155F
   Party_slot4 = $001561
   Unused = $001563
   Unused_Enemy_slot2 = $001565
   Unused_Enemy_slot3 = $001567
   Unused_Enemy_slot4 = $001569
   Unused_Enemy_slot5 = $00156B
   Unused_Enemy_slot6 = $00156D
   Unused_Enemy_slot7 = $00156F
   Unused_Enemy_slot8 = $001571
   Curr_area = $001573; !^ 01xx = dungeon, 00xx = town ^!
   Comparison = $001575
   Win_Color = $001577; !^ Bit layout (-BBB B0GG GG0R RRR0) ^!
   Encounter_Type = $001579; !^ 2=back attack, 3=normal. (What are 1 and 0?) ^!
   ShowCompass = $00157B; !^ 00=hide, 01=show ^!
   Compass_Subdirection = $00157D; !^ Tracks half turns for dungeons, quarter turns for towns. ^!
   Unused_157F = $00157F
   Curr_Display = $001580; !^ Text after 060D is white; after 060E is gray ^!
   DisplayText = $0015AF
   Str_Bonus = $0016DD
   Endur_Bonus = $0016DF
   Int_Bonus = $0016E1
   Alert_Bonus = $0016E3
   Ability_currHP = $0016E5
   HP_Bonus = $0016E7
   Ability_currMP = $0016E9
   MP_Bonus = $0016EB
   Ability_currEXP = $0016ED
   Map_temp01 = $0016EF; !^ idk man ^!
   Stairs_next_floor = $0016F1
   Dungeon_in_motion = $0016F3
   FloorTileValue = $0016F5; !^ 1X,2X=Encounters;80=Chest;70=Boss...etc ^!
   Map_X = $0016F7; !^ X position on current map ^!
   Map_Y = $0016F9
   Map_Compass = $0016FB; !^ 00=North, 02=East, 04=South, 06=West ^!
   Map_Num = $0016FD; !^ 0000=Map1, 0080=Map2, 0100=Map3 ^!
   Map1_Progress = $0016FF; !^ 16FF-177E (80 bytes) ^!
   Map2_Progress = $00177F; !^ 177F-17FE (80 bytes) ^!
   Map3_Progress = $0017FF; !^ 17FF-187E (80 bytes) ^!
   Town_Direction = $00187F; !^ 0000=North, 0200=South, 03F8=West ^!
   Town_Selection = $001881; !^ 0=Armory,1=Inn,2=Healer,3=Pub,8000=Exit ^!
   Shop_Max_Entries = $001883; !^ Number of entries in current menu ^!
   Shop_selection = $001885; !^ i.e. Card Shop values 0-6 ^!
   Shop_Curr_Selection = $00188D; !^ Screen position; 0-3 for 4 weapons shop ^!
   Torn_spirits = $001895; !^ 4 entries, 2b each (Sylph=2) ^!
   Spell_type = $0018C5; !^ From table 05/EDB5. 00=damage, 02=healing... ^!
   TempMP = $0018C9; !^ Current MP after casting a spell ^!
   Chapter_num = $0018CD; !^ Value 01-05 ^!
   Weather_fx = $0018CF; !^ Used in intro lightning/rain scenes ^!
   Stage_select_count = $0018D5; !^ Adds 2 every correct press until 1C ^!
   Ptr_Encounter_layout = $0018D7
   Bank_Encounter_layout = $0018D9
   Ptr_Enemy_list = $0018DA
   Bank_Enemy_list = $0018DC
   Boss_Array = $0018DF
   ChestTracker_1 = $0018E3; !^ Bit set = chest opened ^!
   ChestTracker_2 = $0018E5
   ChestTracker_3 = $0018E7
   ChestTracker_4 = $0018E9
   _4F_50_52_51_Battle = $0018EF
   Decomp_Entry_Addr = $0018F3
   Decomp_Entry_Bank = $0018F5
   Decomp_Addr = $0018F8
   Decomp_Bank = $0018FA
   Story_Progress = $0018FF; !^ Tracks game progress, value 00-1D ^!
   Sprites_end = $001911; !^ Idk what this does ^!
   Credits_Progress = $001927
   Event_PC = $001E10; !^ Super important, used to run data blocks ^!
   Event_PC_Bank = $001E12; !^ Current bank for $10 ^!
   Event_PC_Stack = $001E14; !^ Stores backup addresses for $10 ^!
   Scn_Brightness = $002100; !^ Bits: x000bbbb, x=1 disable, bbbb=brightness ^!
   OAM_sprite_size = $002101
   OAM_lo = $002102
   OAM_hi = $002103
   OAM_data = $002104
   BGmode_Charsize = $002105
   Scn_Pixelation = $002106
   BG1_addr_size = $002107
   BG2_addr_size = $002108
   BG3_addr_size = $002109
   BG3_addr_size_hi = $00210A
   BG12_chr_addr = $00210B
   BG34_chr_addr = $00210C
   BG1_H = $00210D; !^ Horizontal scroll ^!
   BG1_V = $00210E; !^ Vertical scroll ^!
   BG2_H = $00210F
   BG2_V = $002110
   BG3_H = $002111
   BG3_V = $002112
   BG4_H = $002113
   BG4_V = $002114
   Video_port_ctrl = $002115
   VRAM_addr_lo = $002116; !^ Sets addr for $2118/9 and $2139/a. 2b addr. ^!
   VRAM_addr_hi = $002117
   VRAM_dataw_lo = $002118
   VRAM_dataw_hi = $002119
   M7SEL = $00211A; !^ Mode 7 settings ^!
   M7A = $00211B; !^ Mode 7 Matrix A (also $2134/6) ^!
   M7B = $00211C; !^ Mode 7 Matrix B (also $2134/6) ^!
   M7C = $00211D; !^ Mode 7 Matrix C (write twice) ^!
   M7D = $00211E; !^ Mode 7 Matrix D ^!
   M7X = $00211F; !^ Mode 7 Center X ^!
   M7Y = $002120; !^ Mode 7 Center Y ^!
   Palette_Num = $002121; !^ Color/palette selection ^!
   Color_data = $002122; !^ Bit layout (-BBB BBGG GGGR RRRR) ^!
   BG12_Winmask = $002123
   BG34_Winmask = $002124
   OBJcolor_Winmask = $002125
   Win1_left = $002126
   Win1_right = $002127
   Win2_left = $002128
   Win2_right = $002129
   BG_Winmask_logic = $00212A
   OBJcolor_Winmask_logic = $00212B
   Main_scr_enable = $00212C; !^ ---O 4321 Main screen layer enable ^!
   Sub_scr_enable = $00212D; !^ ---O 4321 (Enable BG1-4/OBJ for display ^!
   Main_scr_Winmask = $00212E
   Sub_scr_Winmask = $00212F
   Color_window = $002130; !^ 00 is an allow all ^!
   Color_math = $002131; !^ MHBO 4321 (04321 en, M +/-, H half, B backdrop) ^!
   Fixed_color_data = $002132; !^ BGRC CCCC (Fixed color sel) value (C) ^!
   ScrMode_VidSelect = $002133
   Multiply_lo_2134 = $002134; !^ 2's compliment product of $211b(2b), 8 bit most recently written to $#211c ^!
   Multiply_mid = $002135
   Multiply_hi_2136 = $002136
   HV_counter_latch = $002137
   OAM_read_data = $002138
   VRAM_read_lo = $002139
   VRAM_read_hi = $00213A
   CGRAM_read = $00213B
   Scanline_H = $00213C
   Scanline_V = $00213D
   STAT77 = $00213E; !^ I have no idea what half these registers are ^!
   STAT78 = $00213F
   APU0 = $002140
   APU1 = $002141
   APU2 = $002142
   APU3 = $002143
   WRAM_IO = $002180; !^ Read/write WRAM ^!
   WRAM_lo = $002181
   WRAM_mid = $002182
   WRAM_hi = $002183
   Joypad_1 = $004016; !^ Joypad output 1 ^!
   NMI_time_n = $004200; !^ N.VH ...J (N=NMI enable) ^!
   Multiply_lo = $004202
   Multiply_hi = $004203
   Divisor = $004205
   H_Timer_lo = $004207
   H_Timer_hi = $004208
   V_Timer_lo = $004209
   V_Timer_hi = $00420A
   DMA_enable = $00420B
   HDMA_enable = $00420C
   Access_speed = $00420D; !^ Bit 0: FastROM select ^!
   NMI_flag = $004210; !^ Bit 7: NMI flag set during V-Blank ^!
   IRQ_flag = $004211
   PPU_status = $004212; !^ Holds V-Blank, H-Blank, Auto-Joypad flags ^!
   Prg_IO_port = $004213
   Quotient = $004214
   Mult_Divide_Result = $004216
   P1_Data1_lo = $004218; !^ axlr0000 (a/x/l/r) ^!
   P1_Data1_hi = $004219; !^ byetUDLR (b/y/select/start/Up/Down/Left/Right) ^!
   P2_Data1_lo = $00421A
   P2_Data1_hi = $00421B
   P1_Data2_lo = $00421C
   P1_Data2_hi = $00421D
   P2_Data2_lo = $00421E
   P2_Data2_hi = $00421F
   DMA0_Control = $004300
   DMA0_Dest = $004301
   DMA0_Source_lo = $004302
   DMA0_Source_hi = $004303
   DMA0_Source_bank = $004304
   DMA0_Size_lo = $004305; !^ DMA: $43x5/6 are #bytes to transfer ^!
   DMA0_Size_hi = $004306
   HDMA0_IA_bank = $004307
   HDMA0_Tbl_lo = $004308; !^ $43x8/9 used for HDMA ^!
   HDMA0_Tbl_hi = $004309
   HDMA0_Control = $00430A; !^ $43xA (0-7) ^!
   DMA1_Control = $004310
   DMA1_Dest = $004311
   DMA1_Source_lo = $004312
   DMA1_Source_hi = $004313
   DMA1_Source_bank = $004314
   DMA1_Size_lo = $004315
   DMA1_Size_hi = $004316
   HDMA1_IA_bank = $004317
   HDMA1_Tbl_lo = $004318
   HDMA1_Tbl_hi = $004319
   HDMA1_Control = $00431A
   DMA2_Control = $004320
   DMA2_Dest = $004321
   DMA2_Source_lo = $004322
   DMA2_Source_hi = $004323
   DMA2_Source_bank = $004324
   DMA2_Size_lo = $004325
   DMA_Size_hi = $004326
   HDMA2_IA_bank = $004327
   HDMA2_Tbl_lo = $004328
   HDMA2_Tbl_hi = $004329
   HDMA2_Control = $00432A
   Loc_Font_var02 = $00AC2D
   Loc_Font_var04 = $00AC2F
   Bank_Songs = $00D20D
   Error_Data_01 = $038E19
   Error_Read_2 = $039194
   Error_Read_3 = $039687
   Levelup_stats_Axs_end = $05C6AD
   Items_Battle_use = $05F026
   Tbl_Spirit_stat_2 = $05F0B7
   Tbl_Spirit_stat_3 = $05F0C7
   Tbl_Spirit_def = $05F0E7
   Tbl_Spirit_def_copy = $05F107
   Tbl_0_to_120 = $05F127
   Bank_06_end = $06F1BC
   Something1 = $0E8048
   Something2 = $0E8052
   Something3 = $0E805C
   Something4 = $0E8066
   Something5 = $0E8070
   Something6 = $0E807A
   Something7 = $0E8084
   Something8 = $0E808E
   Called_by_9D1F = $0E8098
   PTR24_00A1D8 = $00A1D8
   PTR24_00A31C = $00A31C
   PTR24_00A343 = $00A343
   PTR24_00AC30 = $00AC30
   DATA16_00B819 = $00B819
   PTR24_00CFD4 = $00CFD4
   PTR24_00CFEA = $00CFEA
   PTR16_00FFFF = $00FFFF
   DATA16_07BE59 = $07BE59
